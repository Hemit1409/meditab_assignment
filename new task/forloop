[HttpPost("GetList")]
        public List<Patients> patientget(Patients patient_obj, int PageNumber = 1, int PageSize = 10)
        {

            List<Patients>? patient_Allergy = new List<Patients>();

            string query = @"
                --select * FROM patientallergyget(@PageNumber,@PageSize,first_Name=>@first_name,last_Name=>@last_name,gender=>@sex,dateofbirth=>@dob,allergy_name=>@allergyname,orderby=>@orderby,ordertype=>@OrderType);
                select * FROM patientallergygetCombined(" + PageNumber + ","+ PageSize + ",first_Name=>"+ GetValue(patient_obj.first_name) + ",last_Name=>"+ GetValue(patient_obj.last_name) + ",gender=>"+ GetValue(patient_obj.sex) + ",dateofbirth=>" + GetValue(patient_obj.dob) + ",allergy_name=>"+ GetValue(patient_obj.allergyname) + ",orderby=>"+ GetValue(patient_obj.Orderby) + ",ordertype=>"+ GetValue(patient_obj.OrderType) + ");";

            Console.WriteLine(query);

            /*string Allergyquery = @"
                select * from allergyget(@patientid);";*/

            DataTable table = new DataTable();

            string sqlDataSource = _configuration.GetConnectionString("PatientsAppConnection");
            NpgsqlDataReader myReader;//,myReader2, myReader3;

            System.IO.StringWriter writer = new System.IO.StringWriter();

            


            using (NpgsqlConnection myCon = new NpgsqlConnection(sqlDataSource))
            {
                myCon.Open();
                using (NpgsqlCommand myCommand = new NpgsqlCommand(query, myCon))
                {
                    /*myCommand.Parameters.AddWithValue("@PageNumber", PageNumber);
                    myCommand.Parameters.AddWithValue("@PageSize", PageSize);
                    myCommand.Parameters.AddWithValue("@first_name", patient_obj.first_name);
                    myCommand.Parameters.AddWithValue("@last_name", patient_obj.last_name);
                    myCommand.Parameters.AddWithValue("@sex", patient_obj.sex);
                    myCommand.Parameters.AddWithValue("@dob", patient_obj.dob);
                    myCommand.Parameters.AddWithValue("@allergyname", patient_obj.allergyname);
                    myCommand.Parameters.AddWithValue("@orderby", patient_obj.Orderby);
                    myCommand.Parameters.AddWithValue("@OrderType", patient_obj.OrderType);*/


                    myReader = myCommand.ExecuteReader();
                    table.Load(myReader);

                    int j = 0, k = 0;
                    Console.WriteLine(table.Rows.Count);
                    for(int i=0;i< table.Rows.Count; i=j)
                    {
                        Patients patientdata= new Patients();
                        List<Allergy> list = new List<Allergy>();

                        patientdata.patient_id = Convert.ToInt32(table.Rows[i]["patientid"].ToString());
                        patientdata.first_name = table.Rows[i]["firstname"].ToString();
                        patientdata.last_name = table.Rows[i]["lastname"].ToString();
                        patientdata.chartnumber= table.Rows[i]["lastname"].ToString();
                        patientdata.sex = table.Rows[i]["sex"].ToString();
                        patientdata.dob = table.Rows[i]["dob"].ToString();
                        for (k=j;k<table.Rows.Count;k++)
                        {
                            j = k;
                            if(patientdata.patient_id == Convert.ToInt32(table.Rows[k]["patientid"].ToString()))
                            {
                                Allergy a= new Allergy();
                                a.patientAllergyId = Convert.ToInt32(table.Rows[k]["_PatientAllergyId"].ToString());
                                a.allergyname = table.Rows[k]["_AllergyName"].ToString();
                                a.note= table.Rows[k]["_Note"].ToString();
                                list.Add(a);
                            }
                            else
                            {
                                j = k;
                                break;
                            }
                        }
                        patientdata.PatientAllergies = list.ToList();
                        patient_Allergy.Add(patientdata);
                        if (k == (table.Rows.Count))
                        {
                            break;
                        }
                    }

                    myCon.Close();
                    myReader.Close();
                }

            }

            return patient_Allergy;

        }